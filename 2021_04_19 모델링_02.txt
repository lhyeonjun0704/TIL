논리적 데이터 모델링(조금은 기계적인 일이다.)

Mapping Rule
 - ERD로 통해서 만든 내용을 관계형 데이터 형식으로 만들때 쓰는 방법론?
 - 더 많은 것들과 빠진 것들을 확인할 수 있다. 

ER Master(자바에 있는 무료 툴 나중에 사용해보자.)
 - 미래에 기획을 하면서 직접 해결해 나가면서 익히길 바란다.

============================================================

Normalization(정규화)
 - 정제되지 않은 데이터를 관계형데이터베이스에 맞는 표로 만들어주는 레시피?
 - UNF(UnnormalizedForm) / 1NF(1st Normal Form)
    컬럼들이 하나 하나가 아토믹하다면 1정규형을 만족시킨다.
    제 3정규형까지가 산업적으로 많이 사용되고 그 이후는 학술적인 면이 크다.

   아토믹(원자적이어야한다?) = 말 그대로 원자처럼 더이상 나눌 수 없는 의미로 되어있거나                           하나만 있는 경우

   제 2정규형은 No partial dependencies 부분 종속성이 없어야된다.
    - 기본키 중에 중복키가 있으면 안된다는 뜻이다.

   제 3정규형은 No transitive dependencies 이행적인 종속성이 없어야한다.
    - 

정규화 예제 URL
 -https://docs.google.com/spreadsheets/d/1zmN7qQYjKGkQW0aSKFQxEJ-yLVXYM27AHgnsybJGvFM/edit#gid=251854387
 - 위에것이 안될경우 http://bit.ly/2wV2SFj

물리적 데이터 모델링
 - 이상적인 표를 구체적인 제품에 맞는 현실적인 표로 만드는 것.(성능이 중요하다.)
 - Just do it!(어느 부분이 문제인지를 찾아야 한다.)
 - Find slow query(느려지는 쿼리를 찾아라. 제품마다 다르기 때문에.)
 - 최후의 보루는 denormalization 이다.

첫 째, index - 가독성 높인다. 정리정돈이 아주 잘된다.
둘 째, application - 캐시와 같은 방법을 이용해 보는 것도 좋다.(저장한다는 뜻)

역 정규화(denrmalization)
 - 개발의 편의성을 위해서 표를 조작하는 것이다.
 - 쓰기의 편리함을 위해 읽기의 편리함을 희생하는 것과 같다.
 - 표를 쪼개는 데 나중에 join을 해야되는 것은 아주 비효율적인(비싼) 작업이다.
 - 처음부터 정규화를 하지 않고 역정규화를 하지 않는다.
 - 단순하게 일반화 할 수 있는 개념은 아니다.

참고 URL - http://bit.ly/2WLMCko